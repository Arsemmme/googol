#                        Copyright (C) 2019 Rafael Santiago
#
# Use of this source is governed by GPL-v2 license that can
# be found in the COPYIN file.
#

include ~/toolsets/go/go.hsl

var src type list;
var dep type string;

project googol : toolset "go" : dependencies $dep : $src;

googol.prologue() {
    setup_gopath();
    $src.ls(".*\\.go$");
}

local function str_contains(haystack type string, needle type string) : result type int {
    var n type int;
    var REedle type string;
    $n = 0;
    while ($n < $needle.len()) {
        if ($needle.at($n) == "\\" || $needle.at($n) == ".") {
            $REedle = $REedle + "\\";
        }
        $REedle = $REedle + $needle.at($n);
        $n = $n + 1;
    }
    result ($haystack.match($REedle) > 0);
}

local function setup_gopath() : result type none {
    var gopath type string;
    $gopath = hefesto.sys.env("GOPATH");
    var cherry_gopath_entry type string;
    var old_cwd type string;
    $old_cwd = hefesto.sys.pwd();
    hefesto.sys.cd("..");
    $cherry_gopath_entry = hefesto.sys.pwd();
    hefesto.sys.cd($old_cwd);
    if (str_contains($gopath, $cherry_gopath_entry)) {
        hefesto.sys.echo("INFO: Nice! GOPATH is configured :)\n");
    } else {
        hefesto.sys.echo("WARN: GOPATH is not configured so I will do it for you on this build task. " +
                         "However, note that currently you are not able to run \"go build\" or \"go run\" commands " +
                         "by yourself for this project. In order to do this, please add \"" + $cherry_gopath_entry + "\" to your GOPATH.\n");
        if (hefesto.sys.os_name() != "windows") {
            $gopath = $gopath + ":";
        } else {
            $gopath = $gopath + ";";
        }
        $gopath = $gopath + $cherry_gopath_entry;
        hefesto.sys.setenv("GOPATH", $cherry_gopath_entry);
    }
}
